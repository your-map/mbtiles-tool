//* Copyright (c) 2010 Scott A. Crosby. <scott@sacrosby.com>
//
//Permission is hereby granted, free of charge, to any person obtaining a copy of
//this software and associated documentation files (the "Software"), to deal in
//the Software without restriction, including without limitation the rights to
//use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
//of the Software, and to permit persons to whom the Software is furnished to do
//so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//SOFTWARE.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: fileformat.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Blob struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	RawSize *int32                 `protobuf:"varint,2,opt,name=raw_size,json=rawSize" json:"raw_size,omitempty"` // When compressed, the uncompressed size
	// Types that are valid to be assigned to Data:
	//
	//	*Blob_Raw
	//	*Blob_ZlibData
	//	*Blob_LzmaData
	//	*Blob_OBSOLETEBzip2Data
	//	*Blob_Lz4Data
	//	*Blob_ZstdData
	Data          isBlob_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Blob) Reset() {
	*x = Blob{}
	mi := &file_fileformat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Blob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blob) ProtoMessage() {}

func (x *Blob) ProtoReflect() protoreflect.Message {
	mi := &file_fileformat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blob.ProtoReflect.Descriptor instead.
func (*Blob) Descriptor() ([]byte, []int) {
	return file_fileformat_proto_rawDescGZIP(), []int{0}
}

func (x *Blob) GetRawSize() int32 {
	if x != nil && x.RawSize != nil {
		return *x.RawSize
	}
	return 0
}

func (x *Blob) GetData() isBlob_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Blob) GetRaw() []byte {
	if x != nil {
		if x, ok := x.Data.(*Blob_Raw); ok {
			return x.Raw
		}
	}
	return nil
}

func (x *Blob) GetZlibData() []byte {
	if x != nil {
		if x, ok := x.Data.(*Blob_ZlibData); ok {
			return x.ZlibData
		}
	}
	return nil
}

func (x *Blob) GetLzmaData() []byte {
	if x != nil {
		if x, ok := x.Data.(*Blob_LzmaData); ok {
			return x.LzmaData
		}
	}
	return nil
}

// Deprecated: Marked as deprecated in fileformat.proto.
func (x *Blob) GetOBSOLETEBzip2Data() []byte {
	if x != nil {
		if x, ok := x.Data.(*Blob_OBSOLETEBzip2Data); ok {
			return x.OBSOLETEBzip2Data
		}
	}
	return nil
}

func (x *Blob) GetLz4Data() []byte {
	if x != nil {
		if x, ok := x.Data.(*Blob_Lz4Data); ok {
			return x.Lz4Data
		}
	}
	return nil
}

func (x *Blob) GetZstdData() []byte {
	if x != nil {
		if x, ok := x.Data.(*Blob_ZstdData); ok {
			return x.ZstdData
		}
	}
	return nil
}

type isBlob_Data interface {
	isBlob_Data()
}

type Blob_Raw struct {
	Raw []byte `protobuf:"bytes,1,opt,name=raw,oneof"` // No compression
}

type Blob_ZlibData struct {
	// Possible compressed versions of the data.
	ZlibData []byte `protobuf:"bytes,3,opt,name=zlib_data,json=zlibData,oneof"`
}

type Blob_LzmaData struct {
	// For LZMA compressed data (optional)
	LzmaData []byte `protobuf:"bytes,4,opt,name=lzma_data,json=lzmaData,oneof"`
}

type Blob_OBSOLETEBzip2Data struct {
	// Formerly used for bzip2 compressed data. Deprecated in 2010.
	//
	// Deprecated: Marked as deprecated in fileformat.proto.
	OBSOLETEBzip2Data []byte `protobuf:"bytes,5,opt,name=OBSOLETE_bzip2_data,json=OBSOLETEBzip2Data,oneof"` // Don't reuse this tag number.
}

type Blob_Lz4Data struct {
	// For LZ4 compressed data (optional)
	Lz4Data []byte `protobuf:"bytes,6,opt,name=lz4_data,json=lz4Data,oneof"`
}

type Blob_ZstdData struct {
	// For ZSTD compressed data (optional)
	ZstdData []byte `protobuf:"bytes,7,opt,name=zstd_data,json=zstdData,oneof"`
}

func (*Blob_Raw) isBlob_Data() {}

func (*Blob_ZlibData) isBlob_Data() {}

func (*Blob_LzmaData) isBlob_Data() {}

func (*Blob_OBSOLETEBzip2Data) isBlob_Data() {}

func (*Blob_Lz4Data) isBlob_Data() {}

func (*Blob_ZstdData) isBlob_Data() {}

type BlobHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *string                `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Indexdata     []byte                 `protobuf:"bytes,2,opt,name=indexdata" json:"indexdata,omitempty"`
	Datasize      *int32                 `protobuf:"varint,3,req,name=datasize" json:"datasize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlobHeader) Reset() {
	*x = BlobHeader{}
	mi := &file_fileformat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlobHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobHeader) ProtoMessage() {}

func (x *BlobHeader) ProtoReflect() protoreflect.Message {
	mi := &file_fileformat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobHeader.ProtoReflect.Descriptor instead.
func (*BlobHeader) Descriptor() ([]byte, []int) {
	return file_fileformat_proto_rawDescGZIP(), []int{1}
}

func (x *BlobHeader) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *BlobHeader) GetIndexdata() []byte {
	if x != nil {
		return x.Indexdata
	}
	return nil
}

func (x *BlobHeader) GetDatasize() int32 {
	if x != nil && x.Datasize != nil {
		return *x.Datasize
	}
	return 0
}

var File_fileformat_proto protoreflect.FileDescriptor

const file_fileformat_proto_rawDesc = "" +
	"\n" +
	"\x10fileformat.proto\x12\x06OSMPBF\"\xed\x01\n" +
	"\x04Blob\x12\x19\n" +
	"\braw_size\x18\x02 \x01(\x05R\arawSize\x12\x12\n" +
	"\x03raw\x18\x01 \x01(\fH\x00R\x03raw\x12\x1d\n" +
	"\tzlib_data\x18\x03 \x01(\fH\x00R\bzlibData\x12\x1d\n" +
	"\tlzma_data\x18\x04 \x01(\fH\x00R\blzmaData\x124\n" +
	"\x13OBSOLETE_bzip2_data\x18\x05 \x01(\fB\x02\x18\x01H\x00R\x11OBSOLETEBzip2Data\x12\x1b\n" +
	"\blz4_data\x18\x06 \x01(\fH\x00R\alz4Data\x12\x1d\n" +
	"\tzstd_data\x18\a \x01(\fH\x00R\bzstdDataB\x06\n" +
	"\x04data\"Z\n" +
	"\n" +
	"BlobHeader\x12\x12\n" +
	"\x04type\x18\x01 \x02(\tR\x04type\x12\x1c\n" +
	"\tindexdata\x18\x02 \x01(\fR\tindexdata\x12\x1a\n" +
	"\bdatasize\x18\x03 \x02(\x05R\bdatasizeBD\n" +
	"\rcrosby.binaryZ3github.com/your-map/mbtiles-tool/internal/osm/proto"

var (
	file_fileformat_proto_rawDescOnce sync.Once
	file_fileformat_proto_rawDescData []byte
)

func file_fileformat_proto_rawDescGZIP() []byte {
	file_fileformat_proto_rawDescOnce.Do(func() {
		file_fileformat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fileformat_proto_rawDesc), len(file_fileformat_proto_rawDesc)))
	})
	return file_fileformat_proto_rawDescData
}

var file_fileformat_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_fileformat_proto_goTypes = []any{
	(*Blob)(nil),       // 0: OSMPBF.Blob
	(*BlobHeader)(nil), // 1: OSMPBF.BlobHeader
}
var file_fileformat_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fileformat_proto_init() }
func file_fileformat_proto_init() {
	if File_fileformat_proto != nil {
		return
	}
	file_fileformat_proto_msgTypes[0].OneofWrappers = []any{
		(*Blob_Raw)(nil),
		(*Blob_ZlibData)(nil),
		(*Blob_LzmaData)(nil),
		(*Blob_OBSOLETEBzip2Data)(nil),
		(*Blob_Lz4Data)(nil),
		(*Blob_ZstdData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fileformat_proto_rawDesc), len(file_fileformat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fileformat_proto_goTypes,
		DependencyIndexes: file_fileformat_proto_depIdxs,
		MessageInfos:      file_fileformat_proto_msgTypes,
	}.Build()
	File_fileformat_proto = out.File
	file_fileformat_proto_goTypes = nil
	file_fileformat_proto_depIdxs = nil
}
